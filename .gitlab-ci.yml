stages:
  - build
  - deploy

variables:
  DOCKER_HOST: "unix:///var/run/docker.sock"

build-rest:
  stage: build
  image: docker:24.0.7
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd inferno-comics-rest
    - npm run docker:build
    - echo "BUILT_REST=true" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - inferno-comics-rest/**/*
        - docker-compose.yml
  allow_failure: true

build-recog:
  stage: build
  image: docker:24.0.7
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd inferno-comics-recog
    - npm run docker:build
    - echo "BUILT_RECOG=true" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - inferno-comics-recog/**/*
        - docker-compose.yml
  allow_failure: true

build-web:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--mtu=1500"]
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd inferno-comics-web
    - npm run docker:build
    - echo "BUILT_WEB=true" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - inferno-comics-web/**/*
        - docker-compose.yml
  allow_failure: true

deploy:
  stage: deploy
  image: ubuntu:20.04
  before_script:
    - apt-get -yq update
    - apt-get -yqq install openssh-client iproute2 || { echo "SSH client installation failed"; exit 1; }
    - mkdir -p ~/.ssh
    - install -m 600 -D /dev/null ~/.ssh/id_rsa
    - echo "$STAGE_SERVER_PRIVATE_KEY" | base64 --decode > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$STAGE_SERVER_HOST" >> ~/.ssh/known_hosts
    - export DEPLOY_PATH="/home/$STAGE_SERVER_USER/inferno-comics"
  script:
    - echo "Testing SSH connectivity..."
    - ssh -i ~/.ssh/id_rsa "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "echo Connected"
    - ssh -i ~/.ssh/id_rsa "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "mkdir -p $DEPLOY_PATH"
    - if [ ! -f docker-compose.yml ]; then echo "docker-compose.yml not found"; exit 1; fi
    - echo "Checking if docker-compose.yml exists on server..."
    - if ssh -i ~/.ssh/id_rsa "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "test -f $DEPLOY_PATH/docker-compose.yml"; then
        echo "docker-compose.yml already exists on server, skipping copy";
      else
        echo "docker-compose.yml not found on server, copying...";
        scp -i ~/.ssh/id_rsa -r docker-compose.yml "$STAGE_SERVER_USER@$STAGE_SERVER_HOST:$DEPLOY_PATH/.";
      fi
    # Only restart services that were actually built
    - |
      SERVICES_TO_RESTART=""
      if [ -n "$BUILT_REST" ]; then
        SERVICES_TO_RESTART="$SERVICES_TO_RESTART inferno-comics-rest"
      fi
      if [ -n "$BUILT_RECOG" ]; then
        SERVICES_TO_RESTART="$SERVICES_TO_RESTART inferno-comics-recog"
      fi
      if [ -n "$BUILT_WEB" ]; then
        SERVICES_TO_RESTART="$SERVICES_TO_RESTART inferno-comics-web"
      fi
      
      if [ -n "$SERVICES_TO_RESTART" ]; then
        echo "Restarting services: $SERVICES_TO_RESTART"
        ssh -i ~/.ssh/id_rsa "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "cd \"$DEPLOY_PATH\" && docker compose pull $SERVICES_TO_RESTART && docker compose up -d $SERVICES_TO_RESTART"
      else
        echo "No services need to be restarted"
      fi
  after_script:
    - rm -rf ~/.ssh
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build-rest
      optional: true
    - job: build-recog
      optional: true
    - job: build-web
      optional: true